<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.campus.mybatis.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.campus.dao.pojo.Course" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="BIGINT" />
    <result column="train_class_id" property="trainClassId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.campus.dao.pojo.Course" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, time, train_class_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="findCourseById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteCourseById" parameterType="java.lang.Integer" >
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertCourse" parameterType="com.campus.dao.pojo.Course" >
    insert into course (id, title, time, 
      train_class_id, content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=BIGINT}, 
      #{trainClassId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertCourseSelective" parameterType="com.campus.dao.pojo.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="trainClassId != null" >
        train_class_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=BIGINT},
      </if>
      <if test="trainClassId != null" >
        #{trainClassId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateCourseByIdSelective" parameterType="com.campus.dao.pojo.Course" >
    update course
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="trainClassId != null" >
        train_class_id = #{trainClassId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateCourseByIdWithBLOBs" parameterType="com.campus.dao.pojo.Course" >
    update course
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=BIGINT},
      train_class_id = #{trainClassId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateCourseById" parameterType="com.campus.dao.pojo.Course" >
    update course
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=BIGINT},
      train_class_id = #{trainClassId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteCourseByClassId" parameterType="java.lang.Integer" >
    delete from course
    where train_class_id = #{classId,jdbcType=INTEGER}
  </delete>
  <select id="findCourseListByClassId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where train_class_id = #{classId,jdbcType=INTEGER} order by time ASC
  </select>
  <select id="findCourseByClassIdAndTime" resultMap="ResultMapWithBLOBs" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where train_class_id = #{classId,jdbcType=INTEGER} and time = #{time,jdbcType=BIGINT} limit 1
  </select>
  <delete id="deleteCourseByParam" parameterType="java.util.Map">
    delete from course where train_class_id = #{classId,jdbcType=INTEGER} and time not in
    <foreach collection="times" item="time" open="(" separator="," close=")">
      #{time}
    </foreach>
  </delete>
</mapper>