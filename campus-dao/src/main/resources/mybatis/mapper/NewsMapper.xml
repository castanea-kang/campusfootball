<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.campus.mybatis.mapper.NewsMapper" >
  <resultMap id="BaseResultMap" type="com.campus.dao.pojo.News" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="imgs" property="imgs" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="collection" property="collection" jdbcType="BIGINT" />
    <result column="views" property="views" jdbcType="BIGINT" />
    <result column="is_show" property="isShow" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.campus.dao.pojo.News" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, imgs, type, create_time, collection, views, is_show
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="findNewsById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteNewsById" parameterType="java.lang.Integer" >
    delete from news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertNews" parameterType="com.campus.dao.pojo.News" >
    insert into news (id, title, imgs, 
      type, create_time, collection, 
      views, is_show, content
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{imgs,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, #{collection,jdbcType=BIGINT}, 
      #{views,jdbcType=BIGINT}, #{isShow,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertNewsSelective" parameterType="com.campus.dao.pojo.News" >
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="imgs != null" >
        imgs,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="collection != null" >
        collection,
      </if>
      <if test="views != null" >
        views,
      </if>
      <if test="isShow != null" >
        is_show,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="imgs != null" >
        #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="collection != null" >
        #{collection,jdbcType=BIGINT},
      </if>
      <if test="views != null" >
        #{views,jdbcType=BIGINT},
      </if>
      <if test="isShow != null" >
        #{isShow,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateNewsByIdSelective" parameterType="com.campus.dao.pojo.News" >
    update news
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="imgs != null" >
        imgs = #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="collection != null" >
        collection = #{collection,jdbcType=BIGINT},
      </if>
      <if test="views != null" >
        views = #{views,jdbcType=BIGINT},
      </if>
      <if test="isShow != null" >
        is_show = #{isShow,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateNewsById" parameterType="com.campus.dao.pojo.News" >
    update news
    set title = #{title,jdbcType=VARCHAR},
      imgs = #{imgs,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT},
      collection = #{collection,jdbcType=BIGINT},
      views = #{views,jdbcType=BIGINT},
      is_show = #{isShow,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findNewsList" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    <where>
    1=1
    <if test="keyword != null and keyword.length()>0">
      and title like CONCAT(CONCAT('%', #{keyword}), '%')
    </if>
      <if test="type != null">
        and type = #{type}
      </if>
    </where>
    order by create_time DESC
  </select>
</mapper>